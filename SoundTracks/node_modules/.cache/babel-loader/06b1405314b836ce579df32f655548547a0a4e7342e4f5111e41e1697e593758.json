{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _wrapAsyncGenerator from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { statSync, createReadStream, promises as fs } from 'node:fs';\nimport { basename } from 'node:path';\nimport DOMException from 'node-domexception';\nimport File from './file.js';\nimport Blob from './index.js';\nvar stat = fs.stat;\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nvar blobFromSync = function blobFromSync(path, type) {\n  return fromBlob(statSync(path), path, type);\n};\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nvar blobFrom = function blobFrom(path, type) {\n  return stat(path).then(function (stat) {\n    return fromBlob(stat, path, type);\n  });\n};\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nvar fileFrom = function fileFrom(path, type) {\n  return stat(path).then(function (stat) {\n    return fromFile(stat, path, type);\n  });\n};\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nvar fileFromSync = function fileFromSync(path, type) {\n  return fromFile(statSync(path), path, type);\n};\n\n// @ts-ignore\nvar fromBlob = function fromBlob(stat, path) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return new Blob([new BlobDataItem({\n    path: path,\n    size: stat.size,\n    lastModified: stat.mtimeMs,\n    start: 0\n  })], {\n    type: type\n  });\n};\n\n// @ts-ignore\nvar fromFile = function fromFile(stat, path) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return new File([new BlobDataItem({\n    path: path,\n    size: stat.size,\n    lastModified: stat.mtimeMs,\n    start: 0\n  })], basename(path), {\n    type: type,\n    lastModified: stat.mtimeMs\n  });\n};\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nvar BlobDataItem = /*#__PURE__*/function (_Symbol$toStringTag) {\n  function BlobDataItem(options) {\n    _classCallCheck(this, BlobDataItem);\n    this.path = options.path;\n    this.start = options.start;\n    this.size = options.size;\n    this.lastModified = options.lastModified;\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  _createClass(BlobDataItem, [{\n    key: \"slice\",\n    value: function slice(start, end) {\n      return new BlobDataItem({\n        path: this.path,\n        lastModified: this.lastModified,\n        size: end - start,\n        start: this.start + start\n      });\n    }\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$_awaitAsyncGen, mtimeMs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _awaitAsyncGenerator(stat(_this.path));\n            case 2:\n              _yield$_awaitAsyncGen = _context.sent;\n              mtimeMs = _yield$_awaitAsyncGen.mtimeMs;\n              if (!(mtimeMs > _this.lastModified)) {\n                _context.next = 6;\n                break;\n              }\n              throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError');\n            case 6:\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(createReadStream(_this.path, {\n                start: _this.start,\n                end: _this.start + _this.size - 1\n              })), _awaitAsyncGenerator), \"t0\", 7);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'Blob';\n    }\n  }]);\n  return BlobDataItem;\n}(Symbol.toStringTag);\nexport default blobFromSync;\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync };","map":{"version":3,"names":["statSync","createReadStream","promises","fs","basename","DOMException","File","Blob","stat","blobFromSync","path","type","fromBlob","blobFrom","then","fileFrom","fromFile","fileFromSync","arguments","length","undefined","BlobDataItem","size","lastModified","mtimeMs","start","_Symbol$toStringTag","options","_classCallCheck","_createClass","key","value","slice","end","stream","_this","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","_yield$_awaitAsyncGen","wrap","_callee$","_context","prev","next","_awaitAsyncGenerator","sent","delegateYield","_asyncGeneratorDelegate","_asyncIterator","stop","get","Symbol","toStringTag"],"sources":["C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/fetch-blob/from.js"],"sourcesContent":["import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n\n\n  constructor (options) {\n    this.path = options.path\n    this.start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.path, {\n      start: this.start,\n      end: this.start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}