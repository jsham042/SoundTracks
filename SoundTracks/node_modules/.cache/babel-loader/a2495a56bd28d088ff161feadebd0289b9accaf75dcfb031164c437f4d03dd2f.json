{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _possibleConstructorReturn from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _assertThisInitialized from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport { types } from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nvar validateHeaderName = typeof http.validateHeaderName === 'function' ? http.validateHeaderName : function (name) {\n  if (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n    var error = new TypeError(\"Header name must be a valid HTTP token [\".concat(name, \"]\"));\n    Object.defineProperty(error, 'code', {\n      value: 'ERR_INVALID_HTTP_TOKEN'\n    });\n    throw error;\n  }\n};\n\n/* c8 ignore next 9 */\nvar validateHeaderValue = typeof http.validateHeaderValue === 'function' ? http.validateHeaderValue : function (name, value) {\n  if (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n    var error = new TypeError(\"Invalid character in header content [\\\"\".concat(name, \"\\\"]\"));\n    Object.defineProperty(error, 'code', {\n      value: 'ERR_INVALID_CHAR'\n    });\n    throw error;\n  }\n};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nvar Headers = /*#__PURE__*/function (_URLSearchParams, _Symbol$toStringTag, _Symbol$iterator, _Symbol$for) {\n  _inherits(Headers, _URLSearchParams);\n  var _super = _createSuper(Headers);\n  /**\n   * Headers class\n   *\n   * @constructor\n   * @param {HeadersInit} [init] - Response headers\n   */\n  function Headers(init) {\n    var _this;\n    _classCallCheck(this, Headers);\n    // Validate and normalize init object in [name, value(s)][]\n    /** @type {string[][]} */\n    var result = [];\n    if (init instanceof Headers) {\n      var raw = init.raw();\n      var _loop = function _loop() {\n        var _result;\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          name = _Object$entries$_i[0],\n          values = _Object$entries$_i[1];\n        (_result = result).push.apply(_result, _toConsumableArray(values.map(function (value) {\n          return [name, value];\n        })));\n      };\n      for (var _i = 0, _Object$entries = Object.entries(raw); _i < _Object$entries.length; _i++) {\n        _loop();\n      }\n    } else if (init == null) {// eslint-disable-line no-eq-null, eqeqeq\n      // No op\n    } else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n      var method = init[Symbol.iterator];\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      if (method == null) {\n        var _result2;\n        // Record<ByteString, ByteString>\n        (_result2 = result).push.apply(_result2, _toConsumableArray(Object.entries(init)));\n      } else {\n        if (typeof method !== 'function') {\n          throw new TypeError('Header pairs must be iterable');\n        }\n\n        // Sequence<sequence<ByteString>>\n        // Note: per spec we have to first exhaust the lists then process them\n        result = _toConsumableArray(init).map(function (pair) {\n          if (typeof pair !== 'object' || types.isBoxedPrimitive(pair)) {\n            throw new TypeError('Each header pair must be an iterable object');\n          }\n          return _toConsumableArray(pair);\n        }).map(function (pair) {\n          if (pair.length !== 2) {\n            throw new TypeError('Each header pair must be a name/value tuple');\n          }\n          return _toConsumableArray(pair);\n        });\n      }\n    } else {\n      throw new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n    }\n\n    // Validate and lowercase\n    result = result.length > 0 ? result.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        value = _ref2[1];\n      validateHeaderName(name);\n      validateHeaderValue(name, String(value));\n      return [String(name).toLowerCase(), String(value)];\n    }) : undefined;\n    _this = _super.call(this, result);\n\n    // Returning a Proxy that will lowercase key names, validate parameters and sort keys\n    // eslint-disable-next-line no-constructor-return\n    return _possibleConstructorReturn(_this, new Proxy(_assertThisInitialized(_this), {\n      get: function get(target, p, receiver) {\n        switch (p) {\n          case 'append':\n          case 'set':\n            return function (name, value) {\n              validateHeaderName(name);\n              validateHeaderValue(name, String(value));\n              return URLSearchParams.prototype[p].call(target, String(name).toLowerCase(), String(value));\n            };\n          case 'delete':\n          case 'has':\n          case 'getAll':\n            return function (name) {\n              validateHeaderName(name);\n              return URLSearchParams.prototype[p].call(target, String(name).toLowerCase());\n            };\n          case 'keys':\n            return function () {\n              target.sort();\n              return new Set(URLSearchParams.prototype.keys.call(target)).keys();\n            };\n          default:\n            return Reflect.get(target, p, receiver);\n        }\n      }\n    }));\n    /* c8 ignore next */\n  }\n  _createClass(Headers, [{\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return Object.prototype.toString.call(this);\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var values = this.getAll(name);\n      if (values.length === 0) {\n        return null;\n      }\n      var value = values.join(', ');\n      if (/^content-encoding$/i.test(name)) {\n        value = value.toLowerCase();\n      }\n      return value;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      var _iterator = _createForOfIteratorHelper(this.keys()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var name = _step.value;\n          Reflect.apply(callback, thisArg, [this.get(name), name, this]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function values() {\n      var _iterator2, _step2, name;\n      return _regeneratorRuntime().wrap(function values$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _iterator2 = _createForOfIteratorHelper(this.keys());\n            _context.prev = 1;\n            _iterator2.s();\n          case 3:\n            if ((_step2 = _iterator2.n()).done) {\n              _context.next = 9;\n              break;\n            }\n            name = _step2.value;\n            _context.next = 7;\n            return this.get(name);\n          case 7:\n            _context.next = 3;\n            break;\n          case 9:\n            _context.next = 14;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            _iterator2.e(_context.t0);\n          case 14:\n            _context.prev = 14;\n            _iterator2.f();\n            return _context.finish(14);\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, values, this, [[1, 11, 14, 17]]);\n    })\n    /**\n     * @type {() => IterableIterator<[string, string]>}\n     */\n  }, {\n    key: \"entries\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime().mark(function entries() {\n      var _iterator3, _step3, name;\n      return _regeneratorRuntime().wrap(function entries$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _iterator3 = _createForOfIteratorHelper(this.keys());\n            _context2.prev = 1;\n            _iterator3.s();\n          case 3:\n            if ((_step3 = _iterator3.n()).done) {\n              _context2.next = 9;\n              break;\n            }\n            name = _step3.value;\n            _context2.next = 7;\n            return [name, this.get(name)];\n          case 7:\n            _context2.next = 3;\n            break;\n          case 9:\n            _context2.next = 14;\n            break;\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            _iterator3.e(_context2.t0);\n          case 14:\n            _context2.prev = 14;\n            _iterator3.f();\n            return _context2.finish(14);\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, entries, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return this.entries();\n    }\n\n    /**\n     * Node-fetch non-spec method\n     * returning all headers and their values as array\n     * @returns {Record<string, string[]>}\n     */\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var _this2 = this;\n      return _toConsumableArray(this.keys()).reduce(function (result, key) {\n        result[key] = _this2.getAll(key);\n        return result;\n      }, {});\n    }\n\n    /**\n     * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n     */\n  }, {\n    key: _Symbol$for,\n    value: function value() {\n      var _this3 = this;\n      return _toConsumableArray(this.keys()).reduce(function (result, key) {\n        var values = _this3.getAll(key);\n        // Http.request() only supports string as Host header.\n        // This hack makes specifying custom Host header possible.\n        if (key === 'host') {\n          result[key] = values[0];\n        } else {\n          result[key] = values.length > 1 ? values : values[0];\n        }\n        return result;\n      }, {});\n    }\n  }]);\n  return Headers;\n}( /*#__PURE__*/_wrapNativeSuper(URLSearchParams), Symbol.toStringTag, Symbol.iterator, Symbol.for('nodejs.util.inspect.custom'));\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nexport { Headers as default };\nObject.defineProperties(Headers.prototype, ['get', 'entries', 'forEach', 'values'].reduce(function (result, property) {\n  result[property] = {\n    enumerable: true\n  };\n  return result;\n}, {}));\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders() {\n  var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return new Headers(headers\n  // Split into pairs\n  .reduce(function (result, value, index, array) {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, []).filter(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      name = _ref4[0],\n      value = _ref4[1];\n    try {\n      validateHeaderName(name);\n      validateHeaderValue(name, String(value));\n      return true;\n    } catch (_unused) {\n      return false;\n    }\n  }));\n}","map":{"version":3,"names":["types","http","validateHeaderName","name","test","error","TypeError","concat","Object","defineProperty","value","validateHeaderValue","Headers","_URLSearchParams","_Symbol$toStringTag","_Symbol$iterator","_Symbol$for","_inherits","_super","_createSuper","init","_this","_classCallCheck","result","raw","_loop","_result","_Object$entries$_i","_slicedToArray","_Object$entries","_i","values","push","apply","_toConsumableArray","map","entries","length","isBoxedPrimitive","method","Symbol","iterator","_result2","pair","_ref","_ref2","String","toLowerCase","undefined","call","_possibleConstructorReturn","Proxy","_assertThisInitialized","get","target","p","receiver","URLSearchParams","prototype","sort","Set","keys","Reflect","_createClass","key","constructor","toString","getAll","join","forEach","callback","thisArg","arguments","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","_regeneratorRuntime","mark","_iterator2","_step2","wrap","values$","_context","prev","next","t0","finish","stop","_iterator3","_step3","entries$","_context2","_this2","reduce","_this3","_wrapNativeSuper","toStringTag","for","default","defineProperties","property","enumerable","fromRawHeaders","headers","index","array","slice","filter","_ref3","_ref4","_unused"],"sources":["C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/node-fetch/src/headers.js"],"sourcesContent":["/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,KAAK,QAAO,WAAW;AAC/B,OAAOC,IAAI,MAAM,WAAW;;AAE5B;AACA,IAAMC,kBAAkB,GAAG,OAAOD,IAAI,CAACC,kBAAkB,KAAK,UAAU,GACvED,IAAI,CAACC,kBAAkB,GACvB,UAAAC,IAAI,EAAI;EACP,IAAI,CAAC,yBAAyB,CAACC,IAAI,CAACD,IAAI,CAAC,EAAE;IAC1C,IAAME,KAAK,GAAG,IAAIC,SAAS,4CAAAC,MAAA,CAA4CJ,IAAI,OAAI;IAC/EK,MAAM,CAACC,cAAc,CAACJ,KAAK,EAAE,MAAM,EAAE;MAACK,KAAK,EAAE;IAAwB,CAAC,CAAC;IACvE,MAAML,KAAK;EACZ;AACD,CAAC;;AAEF;AACA,IAAMM,mBAAmB,GAAG,OAAOV,IAAI,CAACU,mBAAmB,KAAK,UAAU,GACzEV,IAAI,CAACU,mBAAmB,GACxB,UAACR,IAAI,EAAEO,KAAK,EAAK;EAChB,IAAI,iCAAiC,CAACN,IAAI,CAACM,KAAK,CAAC,EAAE;IAClD,IAAML,KAAK,GAAG,IAAIC,SAAS,2CAAAC,MAAA,CAA0CJ,IAAI,SAAK;IAC9EK,MAAM,CAACC,cAAc,CAACJ,KAAK,EAAE,MAAM,EAAE;MAACK,KAAK,EAAE;IAAkB,CAAC,CAAC;IACjE,MAAML,KAAK;EACZ;AACD,CAAC;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQqBO,OAAO,0BAAAC,gBAAA,EAAAC,mBAAA,EAAAC,gBAAA,EAAAC,WAAA;EAAAC,SAAA,CAAAL,OAAA,EAAAC,gBAAA;EAAA,IAAAK,MAAA,GAAAC,YAAA,CAAAP,OAAA;EAC3B;AACD;AACA;AACA;AACA;AACA;EACC,SAAAA,QAAYQ,IAAI,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAV,OAAA;IACjB;IACA;IACA,IAAIW,MAAM,GAAG,EAAE;IACf,IAAIH,IAAI,YAAYR,OAAO,EAAE;MAC5B,IAAMY,GAAG,GAAGJ,IAAI,CAACI,GAAG,EAAE;MAAC,IAAAC,KAAA,YAAAA,MAAA,EAC2B;QAAA,IAAAC,OAAA;QAA7C,IAAAC,kBAAA,GAAAC,cAAA,CAAAC,eAAA,CAAAC,EAAA;UAAO3B,IAAI,GAAAwB,kBAAA;UAAEI,MAAM,GAAAJ,kBAAA;QACvB,CAAAD,OAAA,GAAAH,MAAM,EAACS,IAAI,CAAAC,KAAA,CAAAP,OAAA,EAAAQ,kBAAA,CAAIH,MAAM,CAACI,GAAG,CAAC,UAAAzB,KAAK;UAAA,OAAI,CAACP,IAAI,EAAEO,KAAK,CAAC;QAAA,EAAC,EAAC;MACnD,CAAC;MAFD,SAAAoB,EAAA,MAAAD,eAAA,GAA6BrB,MAAM,CAAC4B,OAAO,CAACZ,GAAG,CAAC,EAAAM,EAAA,GAAAD,eAAA,CAAAQ,MAAA,EAAAP,EAAA;QAAAL,KAAA;MAAA;IAGjD,CAAC,MAAM,IAAIL,IAAI,IAAI,IAAI,EAAE,CAAE;MAC1B;IAAA,CACA,MAAM,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACpB,KAAK,CAACsC,gBAAgB,CAAClB,IAAI,CAAC,EAAE;MACrE,IAAMmB,MAAM,GAAGnB,IAAI,CAACoB,MAAM,CAACC,QAAQ,CAAC;MACpC;MACA,IAAIF,MAAM,IAAI,IAAI,EAAE;QAAA,IAAAG,QAAA;QACnB;QACA,CAAAA,QAAA,GAAAnB,MAAM,EAACS,IAAI,CAAAC,KAAA,CAAAS,QAAA,EAAAR,kBAAA,CAAI1B,MAAM,CAAC4B,OAAO,CAAChB,IAAI,CAAC,EAAC;MACrC,CAAC,MAAM;QACN,IAAI,OAAOmB,MAAM,KAAK,UAAU,EAAE;UACjC,MAAM,IAAIjC,SAAS,CAAC,+BAA+B,CAAC;QACrD;;QAEA;QACA;QACAiB,MAAM,GAAGW,kBAAA,CAAId,IAAI,EACfe,GAAG,CAAC,UAAAQ,IAAI,EAAI;UACZ,IACC,OAAOA,IAAI,KAAK,QAAQ,IAAI3C,KAAK,CAACsC,gBAAgB,CAACK,IAAI,CAAC,EACvD;YACD,MAAM,IAAIrC,SAAS,CAAC,6CAA6C,CAAC;UACnE;UAEA,OAAA4B,kBAAA,CAAWS,IAAI;QAChB,CAAC,CAAC,CAACR,GAAG,CAAC,UAAAQ,IAAI,EAAI;UACd,IAAIA,IAAI,CAACN,MAAM,KAAK,CAAC,EAAE;YACtB,MAAM,IAAI/B,SAAS,CAAC,6CAA6C,CAAC;UACnE;UAEA,OAAA4B,kBAAA,CAAWS,IAAI;QAChB,CAAC,CAAC;MACJ;IACD,CAAC,MAAM;MACN,MAAM,IAAIrC,SAAS,CAAC,yIAAyI,CAAC;IAC/J;;IAEA;IACAiB,MAAM,GACLA,MAAM,CAACc,MAAM,GAAG,CAAC,GAChBd,MAAM,CAACY,GAAG,CAAC,UAAAS,IAAA,EAAmB;MAAA,IAAAC,KAAA,GAAAjB,cAAA,CAAAgB,IAAA;QAAjBzC,IAAI,GAAA0C,KAAA;QAAEnC,KAAK,GAAAmC,KAAA;MACvB3C,kBAAkB,CAACC,IAAI,CAAC;MACxBQ,mBAAmB,CAACR,IAAI,EAAE2C,MAAM,CAACpC,KAAK,CAAC,CAAC;MACxC,OAAO,CAACoC,MAAM,CAAC3C,IAAI,CAAC,CAAC4C,WAAW,EAAE,EAAED,MAAM,CAACpC,KAAK,CAAC,CAAC;IACnD,CAAC,CAAC,GACFsC,SAAS;IAEX3B,KAAA,GAAAH,MAAA,CAAA+B,IAAA,OAAM1B,MAAM;;IAEZ;IACA;IACA,OAAA2B,0BAAA,CAAA7B,KAAA,EAAO,IAAI8B,KAAK,CAAAC,sBAAA,CAAA/B,KAAA,GAAO;MACtBgC,GAAG,WAAAA,IAACC,MAAM,EAAEC,CAAC,EAAEC,QAAQ,EAAE;QACxB,QAAQD,CAAC;UACR,KAAK,QAAQ;UACb,KAAK,KAAK;YACT,OAAO,UAACpD,IAAI,EAAEO,KAAK,EAAK;cACvBR,kBAAkB,CAACC,IAAI,CAAC;cACxBQ,mBAAmB,CAACR,IAAI,EAAE2C,MAAM,CAACpC,KAAK,CAAC,CAAC;cACxC,OAAO+C,eAAe,CAACC,SAAS,CAACH,CAAC,CAAC,CAACN,IAAI,CACvCK,MAAM,EACNR,MAAM,CAAC3C,IAAI,CAAC,CAAC4C,WAAW,EAAE,EAC1BD,MAAM,CAACpC,KAAK,CAAC,CACb;YACF,CAAC;UAEF,KAAK,QAAQ;UACb,KAAK,KAAK;UACV,KAAK,QAAQ;YACZ,OAAO,UAAAP,IAAI,EAAI;cACdD,kBAAkB,CAACC,IAAI,CAAC;cACxB,OAAOsD,eAAe,CAACC,SAAS,CAACH,CAAC,CAAC,CAACN,IAAI,CACvCK,MAAM,EACNR,MAAM,CAAC3C,IAAI,CAAC,CAAC4C,WAAW,EAAE,CAC1B;YACF,CAAC;UAEF,KAAK,MAAM;YACV,OAAO,YAAM;cACZO,MAAM,CAACK,IAAI,EAAE;cACb,OAAO,IAAIC,GAAG,CAACH,eAAe,CAACC,SAAS,CAACG,IAAI,CAACZ,IAAI,CAACK,MAAM,CAAC,CAAC,CAACO,IAAI,EAAE;YACnE,CAAC;UAEF;YACC,OAAOC,OAAO,CAACT,GAAG,CAACC,MAAM,EAAEC,CAAC,EAAEC,QAAQ,CAAC;QAAC;MAE3C;IACD,CAAC,CAAC;IACF;EACD;EAACO,YAAA,CAAAnD,OAAA;IAAAoD,GAAA,EAAAlD,mBAAA;IAAAuC,GAAA,EAED,SAAAA,IAAA,EAA2B;MAC1B,OAAO,IAAI,CAACY,WAAW,CAAC9D,IAAI;IAC7B;EAAC;IAAA6D,GAAA;IAAAtD,KAAA,EAED,SAAAwD,SAAA,EAAW;MACV,OAAO1D,MAAM,CAACkD,SAAS,CAACQ,QAAQ,CAACjB,IAAI,CAAC,IAAI,CAAC;IAC5C;EAAC;IAAAe,GAAA;IAAAtD,KAAA,EAED,SAAA2C,IAAIlD,IAAI,EAAE;MACT,IAAM4B,MAAM,GAAG,IAAI,CAACoC,MAAM,CAAChE,IAAI,CAAC;MAChC,IAAI4B,MAAM,CAACM,MAAM,KAAK,CAAC,EAAE;QACxB,OAAO,IAAI;MACZ;MAEA,IAAI3B,KAAK,GAAGqB,MAAM,CAACqC,IAAI,CAAC,IAAI,CAAC;MAC7B,IAAI,qBAAqB,CAAChE,IAAI,CAACD,IAAI,CAAC,EAAE;QACrCO,KAAK,GAAGA,KAAK,CAACqC,WAAW,EAAE;MAC5B;MAEA,OAAOrC,KAAK;IACb;EAAC;IAAAsD,GAAA;IAAAtD,KAAA,EAED,SAAA2D,QAAQC,QAAQ,EAAuB;MAAA,IAArBC,OAAO,GAAAC,SAAA,CAAAnC,MAAA,QAAAmC,SAAA,QAAAxB,SAAA,GAAAwB,SAAA,MAAGxB,SAAS;MAAA,IAAAyB,SAAA,GAAAC,0BAAA,CACjB,IAAI,CAACb,IAAI,EAAE;QAAAc,KAAA;MAAA;QAA9B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAgC;UAAA,IAArB3E,IAAI,GAAAwE,KAAA,CAAAjE,KAAA;UACdoD,OAAO,CAAC7B,KAAK,CAACqC,QAAQ,EAAEC,OAAO,EAAE,CAAC,IAAI,CAAClB,GAAG,CAAClD,IAAI,CAAC,EAAEA,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/D;MAAC,SAAA4E,GAAA;QAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;MAAA;QAAAN,SAAA,CAAAQ,CAAA;MAAA;IACF;EAAC;IAAAjB,GAAA;IAAAtD,KAAA,eAAAwE,mBAAA,GAAAC,IAAA,CAED,SAAApD,OAAA;MAAA,IAAAqD,UAAA,EAAAC,MAAA,EAAAlF,IAAA;MAAA,OAAA+E,mBAAA,GAAAI,IAAA,UAAAC,QAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAN,UAAA,GAAAV,0BAAA,CACoB,IAAI,CAACb,IAAI,EAAE;YAAA2B,QAAA,CAAAC,IAAA;YAAAL,UAAA,CAAAR,CAAA;UAAA;YAAA,KAAAS,MAAA,GAAAD,UAAA,CAAAP,CAAA,IAAAC,IAAA;cAAAU,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAnBvF,IAAI,GAAAkF,MAAA,CAAA3E,KAAA;YAAA8E,QAAA,CAAAE,IAAA;YACd,OAAM,IAAI,CAACrC,GAAG,CAAClD,IAAI,CAAC;UAAA;YAAAqF,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAG,EAAA,GAAAH,QAAA;YAAAJ,UAAA,CAAAJ,CAAA,CAAAQ,QAAA,CAAAG,EAAA;UAAA;YAAAH,QAAA,CAAAC,IAAA;YAAAL,UAAA,CAAAH,CAAA;YAAA,OAAAO,QAAA,CAAAI,MAAA;UAAA;UAAA;YAAA,OAAAJ,QAAA,CAAAK,IAAA;QAAA;MAAA,GAAA9D,MAAA;IAAA,CAErB;IAED;AACD;AACA;EAFC;IAAAiC,GAAA;IAAAtD,KAAA;IAAA;IAAAwE,mBAAA,GAAAC,IAAA,CAGA,SAAA/C,QAAA;MAAA,IAAA0D,UAAA,EAAAC,MAAA,EAAA5F,IAAA;MAAA,OAAA+E,mBAAA,GAAAI,IAAA,UAAAU,SAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAR,IAAA,GAAAQ,SAAA,CAAAP,IAAA;UAAA;YAAAI,UAAA,GAAApB,0BAAA,CACoB,IAAI,CAACb,IAAI,EAAE;YAAAoC,SAAA,CAAAR,IAAA;YAAAK,UAAA,CAAAlB,CAAA;UAAA;YAAA,KAAAmB,MAAA,GAAAD,UAAA,CAAAjB,CAAA,IAAAC,IAAA;cAAAmB,SAAA,CAAAP,IAAA;cAAA;YAAA;YAAnBvF,IAAI,GAAA4F,MAAA,CAAArF,KAAA;YAAAuF,SAAA,CAAAP,IAAA;YACd,OAAM,CAACvF,IAAI,EAAE,IAAI,CAACkD,GAAG,CAAClD,IAAI,CAAC,CAAC;UAAA;YAAA8F,SAAA,CAAAP,IAAA;YAAA;UAAA;YAAAO,SAAA,CAAAP,IAAA;YAAA;UAAA;YAAAO,SAAA,CAAAR,IAAA;YAAAQ,SAAA,CAAAN,EAAA,GAAAM,SAAA;YAAAH,UAAA,CAAAd,CAAA,CAAAiB,SAAA,CAAAN,EAAA;UAAA;YAAAM,SAAA,CAAAR,IAAA;YAAAK,UAAA,CAAAb,CAAA;YAAA,OAAAgB,SAAA,CAAAL,MAAA;UAAA;UAAA;YAAA,OAAAK,SAAA,CAAAJ,IAAA;QAAA;MAAA,GAAAzD,OAAA;IAAA,CAE7B;EAAA;IAAA4B,GAAA,EAAAjD,gBAAA;IAAAL,KAAA,EAED,SAAAA,MAAA,EAAoB;MACnB,OAAO,IAAI,CAAC0B,OAAO,EAAE;IACtB;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA4B,GAAA;IAAAtD,KAAA,EAKA,SAAAc,IAAA,EAAM;MAAA,IAAA0E,MAAA;MACL,OAAOhE,kBAAA,CAAI,IAAI,CAAC2B,IAAI,EAAE,EAAEsC,MAAM,CAAC,UAAC5E,MAAM,EAAEyC,GAAG,EAAK;QAC/CzC,MAAM,CAACyC,GAAG,CAAC,GAAGkC,MAAI,CAAC/B,MAAM,CAACH,GAAG,CAAC;QAC9B,OAAOzC,MAAM;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACP;;IAEA;AACD;AACA;EAFC;IAAAyC,GAAA,EAAAhD,WAAA;IAAAN,KAAA,EAGA,SAAAA,MAAA,EAA6C;MAAA,IAAA0F,MAAA;MAC5C,OAAOlE,kBAAA,CAAI,IAAI,CAAC2B,IAAI,EAAE,EAAEsC,MAAM,CAAC,UAAC5E,MAAM,EAAEyC,GAAG,EAAK;QAC/C,IAAMjC,MAAM,GAAGqE,MAAI,CAACjC,MAAM,CAACH,GAAG,CAAC;QAC/B;QACA;QACA,IAAIA,GAAG,KAAK,MAAM,EAAE;UACnBzC,MAAM,CAACyC,GAAG,CAAC,GAAGjC,MAAM,CAAC,CAAC,CAAC;QACxB,CAAC,MAAM;UACNR,MAAM,CAACyC,GAAG,CAAC,GAAGjC,MAAM,CAACM,MAAM,GAAG,CAAC,GAAGN,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC;QACrD;QAEA,OAAOR,MAAM;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACP;EAAC;EAAA,OAAAX,OAAA;AAAA,gBAAAyF,gBAAA,CArLmC5C,eAAe,GA0G9CjB,MAAM,CAAC8D,WAAW,EA2CtB9D,MAAM,CAACC,QAAQ,EAmBfD,MAAM,CAAC+D,GAAG,CAAC,4BAA4B,CAAC;AAgB1C;AACA;AACA;AACA;AAHA,SAxLqB3F,OAAO,IAAA4F,OAAA;AA4L5BhG,MAAM,CAACiG,gBAAgB,CACtB7F,OAAO,CAAC8C,SAAS,EACjB,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAACyC,MAAM,CAAC,UAAC5E,MAAM,EAAEmF,QAAQ,EAAK;EACpEnF,MAAM,CAACmF,QAAQ,CAAC,GAAG;IAACC,UAAU,EAAE;EAAI,CAAC;EACrC,OAAOpF,MAAM;AACd,CAAC,EAAE,CAAC,CAAC,CAAC,CACN;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,SAASqF,cAAcA,CAAA,EAAe;EAAA,IAAdC,OAAO,GAAArC,SAAA,CAAAnC,MAAA,QAAAmC,SAAA,QAAAxB,SAAA,GAAAwB,SAAA,MAAG,EAAE;EAC1C,OAAO,IAAI5D,OAAO,CACjBiG;EACC;EAAA,CACCV,MAAM,CAAC,UAAC5E,MAAM,EAAEb,KAAK,EAAEoG,KAAK,EAAEC,KAAK,EAAK;IACxC,IAAID,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;MACpBvF,MAAM,CAACS,IAAI,CAAC+E,KAAK,CAACC,KAAK,CAACF,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC,CAAC;IAC3C;IAEA,OAAOvF,MAAM;EACd,CAAC,EAAE,EAAE,CAAC,CACL0F,MAAM,CAAC,UAAAC,KAAA,EAAmB;IAAA,IAAAC,KAAA,GAAAvF,cAAA,CAAAsF,KAAA;MAAjB/G,IAAI,GAAAgH,KAAA;MAAEzG,KAAK,GAAAyG,KAAA;IACpB,IAAI;MACHjH,kBAAkB,CAACC,IAAI,CAAC;MACxBQ,mBAAmB,CAACR,IAAI,EAAE2C,MAAM,CAACpC,KAAK,CAAC,CAAC;MACxC,OAAO,IAAI;IACZ,CAAC,CAAC,OAAA0G,OAAA,EAAM;MACP,OAAO,KAAK;IACb;EACD,CAAC,CAAC,CAEH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}