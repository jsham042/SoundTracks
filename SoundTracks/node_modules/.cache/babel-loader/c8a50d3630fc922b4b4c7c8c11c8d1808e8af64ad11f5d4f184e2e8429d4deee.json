{"ast":null,"code":"import _objectSpread from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, { clone as _clone, extractContentType } from './body.js';\nimport { isRedirect } from './utils/is-redirect.js';\nvar INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nvar Response = /*#__PURE__*/function (_Body, _Symbol$toStringTag) {\n  _inherits(Response, _Body);\n  var _super = _createSuper(Response);\n  function Response() {\n    var _this;\n    var body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Response);\n    _this = _super.call(this, body, options);\n\n    // eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n    var status = options.status != null ? options.status : 200;\n    var headers = new Headers(options.headers);\n    if (body !== null && !headers.has('Content-Type')) {\n      var contentType = extractContentType(body, _assertThisInitialized(_this));\n      if (contentType) {\n        headers.append('Content-Type', contentType);\n      }\n    }\n    _this[INTERNALS] = {\n      type: 'default',\n      url: options.url,\n      status: status,\n      statusText: options.statusText || '',\n      headers: headers,\n      counter: options.counter,\n      highWaterMark: options.highWaterMark\n    };\n    return _this;\n  }\n  _createClass(Response, [{\n    key: \"type\",\n    get: function get() {\n      return this[INTERNALS].type;\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this[INTERNALS].url || '';\n    }\n  }, {\n    key: \"status\",\n    get: function get() {\n      return this[INTERNALS].status;\n    }\n\n    /**\n     * Convenience property representing if the request ended normally\n     */\n  }, {\n    key: \"ok\",\n    get: function get() {\n      return this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n    }\n  }, {\n    key: \"redirected\",\n    get: function get() {\n      return this[INTERNALS].counter > 0;\n    }\n  }, {\n    key: \"statusText\",\n    get: function get() {\n      return this[INTERNALS].statusText;\n    }\n  }, {\n    key: \"headers\",\n    get: function get() {\n      return this[INTERNALS].headers;\n    }\n  }, {\n    key: \"highWaterMark\",\n    get: function get() {\n      return this[INTERNALS].highWaterMark;\n    }\n\n    /**\n     * Clone this response\n     *\n     * @return  Response\n     */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Response(_clone(this, this.highWaterMark), {\n        type: this.type,\n        url: this.url,\n        status: this.status,\n        statusText: this.statusText,\n        headers: this.headers,\n        ok: this.ok,\n        redirected: this.redirected,\n        size: this.size,\n        highWaterMark: this.highWaterMark\n      });\n    }\n\n    /**\n     * @param {string} url    The URL that the new response is to originate from.\n     * @param {number} status An optional status code for the response (e.g., 302.)\n     * @returns {Response}    A Response object.\n     */\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'Response';\n    }\n  }], [{\n    key: \"redirect\",\n    value: function redirect(url) {\n      var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 302;\n      if (!isRedirect(status)) {\n        throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n      }\n      return new Response(null, {\n        headers: {\n          location: new URL(url).toString()\n        },\n        status: status\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      var response = new Response(null, {\n        status: 0,\n        statusText: ''\n      });\n      response[INTERNALS].type = 'error';\n      return response;\n    }\n  }, {\n    key: \"json\",\n    value: function json() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var body = JSON.stringify(data);\n      if (body === undefined) {\n        throw new TypeError('data is not JSON serializable');\n      }\n      var headers = new Headers(init && init.headers);\n      if (!headers.has('content-type')) {\n        headers.set('content-type', 'application/json');\n      }\n      return new Response(body, _objectSpread(_objectSpread({}, init), {}, {\n        headers: headers\n      }));\n    }\n  }]);\n  return Response;\n}(Body, Symbol.toStringTag);\nexport { Response as default };\nObject.defineProperties(Response.prototype, {\n  type: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  status: {\n    enumerable: true\n  },\n  ok: {\n    enumerable: true\n  },\n  redirected: {\n    enumerable: true\n  },\n  statusText: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  }\n});","map":{"version":3,"names":["Headers","Body","clone","extractContentType","isRedirect","INTERNALS","Symbol","Response","_Body","_Symbol$toStringTag","_inherits","_super","_createSuper","_this","body","arguments","length","undefined","options","_classCallCheck","call","status","headers","has","contentType","_assertThisInitialized","append","type","url","statusText","counter","highWaterMark","_createClass","key","get","value","ok","redirected","size","redirect","RangeError","location","URL","toString","error","response","json","data","init","JSON","stringify","TypeError","set","_objectSpread","toStringTag","default","Object","defineProperties","prototype","enumerable"],"sources":["C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/node-fetch/src/response.js"],"sourcesContent":["/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}