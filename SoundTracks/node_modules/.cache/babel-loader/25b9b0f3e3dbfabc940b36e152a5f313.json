{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\joesh\\\\OneDrive\\\\Desktop\\\\jammming-project-solution\\\\jammming-project-solution\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\joesh\\\\OneDrive\\\\Desktop\\\\jammming-project-solution\\\\jammming-project-solution\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\joesh\\\\OneDrive\\\\Desktop\\\\jammming-project-solution\\\\jammming-project-solution\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\joesh\\\\OneDrive\\\\Desktop\\\\jammming-project-solution\\\\jammming-project-solution\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\joesh\\\\OneDrive\\\\Desktop\\\\jammming-project-solution\\\\jammming-project-solution\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\joesh\\\\OneDrive\\\\Desktop\\\\jammming-project-solution\\\\jammming-project-solution\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\joesh\\\\OneDrive\\\\Desktop\\\\jammming-project-solution\\\\jammming-project-solution\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    };\n    _this.search = _this.search.bind(_assertThisInitialized(_this));\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_this));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_this));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_this));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"search\",\n    value: function search(term) {\n      var _this2 = this;\n\n      Spotify.search(term).then(function (searchResults) {\n        _this2.setState({\n          searchResults: searchResults\n        });\n      });\n    }\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      var tracks = this.state.playlistTracks;\n\n      if (tracks.find(function (savedTrack) {\n        return savedTrack.id === track.id;\n      })) {\n        return;\n      }\n\n      tracks.push(track);\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var tracks = this.state.playlistTracks;\n      tracks = tracks.filter(function (currentTrack) {\n        return currentTrack.id !== track.id;\n      });\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playlistName: name\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var _this3 = this;\n\n      var trackUris = this.state.playlistTracks.map(function (track) {\n        return track.uri;\n      });\n      Spotify.savePlaylist(this.state.playlistName, trackUris).then(function () {\n        _this3.setState({\n          playlistName: 'New Playlist',\n          playlistTracks: []\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: this.state.searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        playlistName: this.state.playlistName,\n        playlistTracks: this.state.playlistTracks,\n        onNameChange: this.updatePlaylistName,\n        onRemove: this.removeTrack,\n        onSave: this.savePlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\joesh\\OneDrive\\Desktop\\jammming-project-solution\\jammming-project-solution\\src\\components\\App\\App.js"],"names":["React","Playlist","SearchBar","SearchResults","Spotify","App","props","state","searchResults","playlistName","playlistTracks","search","bind","addTrack","removeTrack","updatePlaylistName","savePlaylist","term","then","setState","track","tracks","find","savedTrack","id","push","filter","currentTrack","name","trackUris","map","uri","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    };\n\n    this.search = this.search.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults});\n    });\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n\n    this.setState({playlistTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults}\n                           onAdd={this.addTrack} />\n            <Playlist playlistName={this.state.playlistName}\n                      playlistTracks={this.state.playlistTracks}\n                      onNameChange={this.updatePlaylistName}\n                      onRemove={this.removeTrack}\n                      onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}