{"ast":null,"code":"var clientId='eccaa8f5ff264e5fa50317fe0514fb19';// client ID  that Joe got from registering the app\n// const redirectUri = 'http://localhost:3000/callback'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nvar redirectUri='https://www.soundtracksai.com/';// Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nvar accessToken;var Spotify={getAccessToken:function getAccessToken(){if(accessToken){return accessToken;}var accessTokenMatch=window.location.href.match(/access_token=([^&]*)/);var expiresInMatch=window.location.href.match(/expires_in=([^&]*)/);if(accessTokenMatch&&expiresInMatch){accessToken=accessTokenMatch[1];var expiresIn=Number(expiresInMatch[1]);window.setTimeout(function(){return accessToken='';},expiresIn*1000);window.history.pushState('Access Token',null,'/');// This clears the parameters, allowing us to grab a new access token when it expires.\nreturn accessToken;}else{var accessUrl=\"https://accounts.spotify.com/authorize?client_id=\".concat(clientId,\"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectUri);window.location=accessUrl;}},search:function search(term){var accessToken=Spotify.getAccessToken();return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term),{headers:{Authorization:\"Bearer \".concat(accessToken)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(!jsonResponse.tracks){return[];}return jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artist:track.artists[0].name,album:track.album.name,uri:track.uri,preview_url:track.preview_url};});});},openAiSearch:function openAiSearch(term){var accessToken=Spotify.getAccessToken();return fetch(\"https://api.spotify.com/v1/search?q=\".concat(term,\"&type=track&limit=1\"),{headers:{Authorization:\"Bearer \".concat(accessToken)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(!jsonResponse.tracks){return[];}return jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artist:track.artists[0].name,album:track.album.name,uri:track.uri,preview_url:track.preview_url};});});},makeRecommendation:function makeRecommendation(genre){var accessToken=Spotify.getAccessToken();return fetch(\"https://api.spotify.com/v1/recommendations?limit=100&market=us&seed_genres=\".concat(genre,\"&min_danceability=50\\\"\"),//will fill in with danceability values later\n{headers:{Authorization:\"Bearer \".concat(accessToken)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(!jsonResponse.tracks){return[];}return jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artist:track.artists[0].name,album:track.album.name,uri:track.uri,preview_url:track.preview_url};});});},savePlaylist:function savePlaylist(name,trackUris){if(!name||!trackUris.length){return;}var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};var userId;return fetch('https://api.spotify.com/v1/me',{headers:headers}).then(function(response){return response.json();}).then(function(jsonResponse){userId=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists\"),{headers:headers,method:'POST',body:JSON.stringify({name:name})}).then(function(response){return response.json();}).then(function(jsonResponse){var playlistId=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists/\").concat(playlistId,\"/tracks\"),{headers:headers,method:'POST',body:JSON.stringify({uris:trackUris})});});});}};export default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","concat","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","preview_url","openAiSearch","makeRecommendation","genre","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris"],"sources":["C:/Users/joesh/OneDrive/Desktop/SoundTracks/SoundTracks/src/util/Spotify.js"],"sourcesContent":["const clientId = 'eccaa8f5ff264e5fa50317fe0514fb19'; // client ID  that Joe got from registering the app\n// const redirectUri = 'http://localhost:3000/callback'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nconst redirectUri = 'https://www.soundtracksai.com/'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nlet accessToken;\n\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/'); // This clears the parameters, allowing us to grab a new access token when it expires.\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri,\n        preview_url: track.preview_url\n      }));\n    });\n  },\n\n  openAiSearch(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?q=${term}&type=track&limit=1`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri,\n        preview_url: track.preview_url\n      }));\n    });\n  },\n\n  makeRecommendation(genre) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/recommendations?limit=100&market=us&seed_genres=${genre}&min_danceability=50\"`,//will fill in with danceability values later\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri,\n        preview_url: track.preview_url\n      }));\n    });\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n\n    const accessToken = Spotify.getAccessToken();\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    let userId;\n\n    return fetch('https://api.spotify.com/v1/me', {headers: headers}\n    ).then(response => response.json()\n    ).then(jsonResponse => {\n      userId = jsonResponse.id;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: headers,\n        method: 'POST',\n        body: JSON.stringify({name: name})\n      }).then(response => response.json()\n      ).then(jsonResponse => {\n        const playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({uris: trackUris})\n        });\n      });\n    });\n  }\n};\n\nexport default Spotify;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}