{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Information to reach API\nvar API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\nvar api_key = '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';\n\n//Asynchronous functions\nexport var generateSongRecommendations = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(prompt) {\n    var data, response, jsonResponse, responseArray, filteredResponse;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          data = JSON.stringify({\n            prompt: prompt,\n            temperature: 0.5,\n            max_tokens: 500,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n          });\n          _context.prev = 1;\n          _context.next = 4;\n          return fetch(API_URL, {\n            method: \"POST\",\n            body: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \".concat(api_key)\n            }\n          });\n        case 4:\n          response = _context.sent;\n          if (!response.ok) {\n            _context.next = 12;\n            break;\n          }\n          _context.next = 8;\n          return response.json();\n        case 8:\n          jsonResponse = _context.sent;\n          responseArray = jsonResponse.choices[0].text.split(/\\d+\\.\\s/g);\n          filteredResponse = responseArray.map(function (element) {\n            return element.replace(/\\n|\\d+\\./g, \"\").trim();\n          }).filter(function (element) {\n            return element !== \"\";\n          });\n          return _context.abrupt(\"return\", filteredResponse);\n        case 12:\n          _context.next = 17;\n          break;\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[1, 14]]);\n  }));\n  return function generateSongRecommendations(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var generatePlaylistName = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(prompt) {\n    var data, response, jsonResponse, textResponse;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          data = JSON.stringify({\n            prompt: prompt,\n            temperature: 0.5,\n            max_tokens: 500,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n          });\n          _context2.prev = 1;\n          _context2.next = 4;\n          return fetch(API_URL, {\n            method: \"POST\",\n            body: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \".concat(api_key)\n            }\n          });\n        case 4:\n          response = _context2.sent;\n          if (!response.ok) {\n            _context2.next = 11;\n            break;\n          }\n          _context2.next = 8;\n          return response.json();\n        case 8:\n          jsonResponse = _context2.sent;\n          textResponse = jsonResponse.choices[0].text;\n          return _context2.abrupt(\"return\", textResponse);\n        case 11:\n          _context2.next = 16;\n          break;\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 13]]);\n  }));\n  return function generatePlaylistName(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n// const prompt = \"Come up with a playlist name for playlist with the following vibe: driving down the 101 with the windows down. I'm with friends who like country music. make it less than 50 characters\";\n// const playlistName = await generatePlaylistName(prompt);\n// console.log(playlistName);\n\n// export const generateImage = async(prompt) => {\n//\n//\n//     const data = JSON.stringify({\n//         \"model\": \"image-alpha-001\",\n//         \"prompt\": prompt,\n//         \"num_images\": 1,\n//         \"size\": \"512x512\"\n//     });\n//\n//     try {\n//         const response = await fetch(API_URL, {\n//             method: \"POST\",\n//             body: data,\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//                 \"Authorization\": `Bearer ${api_key}`\n//             }\n//         });\n//         if(response.ok){\n//             const jsonResponse = await response.json();\n//             return jsonResponse.data[0].url;\n//         }\n//     } catch (error) {\n//         console.log(error);\n//     }\n// }\n\nexport default {\n  generateSongRecommendations: generateSongRecommendations\n};","map":{"version":3,"names":["API_URL","api_key","generateSongRecommendations","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","prompt","data","response","jsonResponse","responseArray","filteredResponse","wrap","_callee$","_context","prev","next","JSON","stringify","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","fetch","method","body","headers","concat","sent","ok","json","choices","text","split","map","element","replace","trim","filter","abrupt","t0","console","log","stop","_x","apply","arguments","generatePlaylistName","_ref2","_callee2","textResponse","_callee2$","_context2","_x2"],"sources":["C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/src/util/OpenAiAPIRequest.js"],"sourcesContent":["// Information to reach API\r\nconst API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\r\nconst api_key = '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';\r\n\r\n//Asynchronous functions\r\nexport const generateSongRecommendations = async(prompt) => {\r\n\r\n\r\n    const data = JSON.stringify({\r\n      prompt: prompt,\r\n      temperature: 0.5,\r\n      max_tokens: 500,\r\n      top_p: 1,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    });\r\n\r\n    try {\r\n        const response = await fetch(API_URL, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${api_key}`\r\n            }\r\n            });\r\n            if(response.ok){\r\n            const jsonResponse = await response.json();\r\n            const responseArray = jsonResponse.choices[0].text.split(/\\d+\\.\\s/g);\r\n            const filteredResponse = responseArray.map((element) => {\r\n                return element.replace(/\\n|\\d+\\./g, \"\").trim();\r\n            }).filter((element) => element !== \"\");\r\n            return(filteredResponse);\r\n        }\r\n    } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\nexport const generatePlaylistName = async(prompt) => {\r\n    const data = JSON.stringify({\r\n        prompt: prompt,\r\n        temperature: 0.5,\r\n        max_tokens: 500,\r\n        top_p: 1,\r\n        frequency_penalty: 0,\r\n        presence_penalty: 0\r\n    });\r\n\r\n    try {\r\n        const response = await fetch(API_URL, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${api_key}`\r\n            }\r\n        });\r\n        if(response.ok){\r\n            const jsonResponse = await response.json();\r\n            const textResponse = jsonResponse.choices[0].text\r\n            return(textResponse);\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n// const prompt = \"Come up with a playlist name for playlist with the following vibe: driving down the 101 with the windows down. I'm with friends who like country music. make it less than 50 characters\";\r\n// const playlistName = await generatePlaylistName(prompt);\r\n// console.log(playlistName);\r\n\r\n\r\n// export const generateImage = async(prompt) => {\r\n//\r\n//\r\n//     const data = JSON.stringify({\r\n//         \"model\": \"image-alpha-001\",\r\n//         \"prompt\": prompt,\r\n//         \"num_images\": 1,\r\n//         \"size\": \"512x512\"\r\n//     });\r\n//\r\n//     try {\r\n//         const response = await fetch(API_URL, {\r\n//             method: \"POST\",\r\n//             body: data,\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//                 \"Authorization\": `Bearer ${api_key}`\r\n//             }\r\n//         });\r\n//         if(response.ok){\r\n//             const jsonResponse = await response.json();\r\n//             return jsonResponse.data[0].url;\r\n//         }\r\n//     } catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default {generateSongRecommendations};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}