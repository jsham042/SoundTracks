{"ast":null,"code":"var clientId = 'c3a859af5f674d61b9aaefe638761f1e'; // client ID  that Joe got from registering the app\nvar redirectUri = 'http://localhost:3000/callback'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nvar accessToken;\nvar Spotify = {\n  getAccessToken: function getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n    var accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    var expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      var expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(function () {\n        return accessToken = '';\n      }, expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/'); // This clears the parameters, allowing us to grab a new access token when it expires.\n      return accessToken;\n    } else {\n      var accessUrl = \"https://accounts.spotify.com/authorize?client_id=\".concat(clientId, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectUri);\n      window.location = accessUrl;\n    }\n  },\n  search: function search(term) {\n    var accessToken = Spotify.getAccessToken();\n    return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(function (track) {\n        return {\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        };\n      });\n    });\n  },\n  openAisearch: function openAisearch(term) {\n    var accessToken = Spotify.getAccessToken();\n    return fetch(\"https://api.spotify.com/v1/search?type=track&limit=1&q=\".concat(term), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(function (track) {\n        return {\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        };\n      });\n    });\n  },\n  generateText: function generateText(prompt) {\n    var API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\n    var api_key = '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';\n    return new Promise(function (resolve, reject) {\n      var data = JSON.stringify({\n        prompt: prompt,\n        temperature: 0.5,\n        max_tokens: 500,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0\n      });\n      fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(api_key)\n        },\n        body: data\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request failed!');\n      }, function (networkError) {\n        console.log(networkError.message);\n      }).then(function (jsonResponse) {\n        var responseArray = jsonResponse.choices[0].text.split(/\\d+\\.\\s/g);\n        var filteredResponse = responseArray.map(function (element) {\n          return element.replace(/\\n|\\d+\\./g, \"\").trim();\n        }).filter(function (element) {\n          return element !== \"\";\n        });\n        resolve(filteredResponse);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  makeRecommendation: function makeRecommendation(genre) {\n    var accessToken = Spotify.getAccessToken();\n    return fetch(\"https://api.spotify.com/v1/recommendations?limit=100&market=us&seed_genres=\".concat(genre, \"&min_danceability=50\\\"\"),\n    //will fill in with danceability values later\n    {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(function (track) {\n        return {\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        };\n      });\n    });\n  },\n  savePlaylist: function savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n    var accessToken = Spotify.getAccessToken();\n    var headers = {\n      Authorization: \"Bearer \".concat(accessToken)\n    };\n    var userId;\n    return fetch('https://api.spotify.com/v1/me', {\n      headers: headers\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      userId = jsonResponse.id;\n      return fetch(\"https://api.spotify.com/v1/users/\".concat(userId, \"/playlists\"), {\n        headers: headers,\n        method: 'POST',\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (jsonResponse) {\n        var playlistId = jsonResponse.id;\n        return fetch(\"https://api.spotify.com/v1/users/\".concat(userId, \"/playlists/\").concat(playlistId, \"/tracks\"), {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({\n            uris: trackUris\n          })\n        });\n      });\n    });\n  }\n};\nSpotify.generateText(\"Give me 20 song recommendations for this prompt: driving down the 101 with the top down. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`\").then(function (response) {\n  console.log(response);\n}).catch(function (error) {\n  console.error(error);\n});\nexport default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","concat","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","openAisearch","generateText","prompt","API_URL","api_key","Promise","resolve","reject","data","JSON","stringify","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","method","body","ok","Error","networkError","console","log","message","responseArray","choices","text","split","filteredResponse","element","replace","trim","filter","catch","error","makeRecommendation","genre","savePlaylist","trackUris","length","userId","playlistId","uris"],"sources":["C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/src/util/Spotify.js"],"sourcesContent":["const clientId = 'c3a859af5f674d61b9aaefe638761f1e'; // client ID  that Joe got from registering the app\nconst redirectUri = 'http://localhost:3000/callback'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nlet accessToken;\n\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/'); // This clears the parameters, allowing us to grab a new access token when it expires.\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  openAisearch(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&limit=1&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  generateText(prompt) {\n    const API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\n    const api_key = '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';\n    return new Promise((resolve, reject) => {\n        const data = JSON.stringify({\n            prompt: prompt,\n            temperature: 0.5,\n            max_tokens: 500,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n        });\n\n        fetch(API_URL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${api_key}`,\n            },\n            body: data,\n\n\n        }).then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Request failed!');\n        }, networkError => {\n            console.log(networkError.message);\n        }).then(jsonResponse => {\n            const responseArray = jsonResponse.choices[0].text.split(/\\d+\\.\\s/g);\n            const filteredResponse = responseArray.map((element) => {\n                return element.replace(/\\n|\\d+\\./g, \"\").trim();\n            }).filter((element) => element !== \"\");\n            resolve(filteredResponse);\n        }).catch(error => {\n            reject(error);\n        });\n    });},\n\n  makeRecommendation(genre) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/recommendations?limit=100&market=us&seed_genres=${genre}&min_danceability=50\"`,//will fill in with danceability values later\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n\n    const accessToken = Spotify.getAccessToken();\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    let userId;\n\n    return fetch('https://api.spotify.com/v1/me', {headers: headers}\n    ).then(response => response.json()\n    ).then(jsonResponse => {\n      userId = jsonResponse.id;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: headers,\n        method: 'POST',\n        body: JSON.stringify({name: name})\n      }).then(response => response.json()\n      ).then(jsonResponse => {\n        const playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({uris: trackUris})\n        });\n      });\n    });\n  }\n};\n\n\nSpotify.generateText(\"Give me 20 song recommendations for this prompt: driving down the 101 with the top down. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`\").then((response) => {\n  console.log(response);\n}).catch((error) => {\n  console.error(error);\n});\nexport default Spotify;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}