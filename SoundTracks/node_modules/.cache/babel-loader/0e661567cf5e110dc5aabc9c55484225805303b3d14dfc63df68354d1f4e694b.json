{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Information to reach API\n\n//Asynchronous functions\nexport var generateText = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(prompt) {\n    var API_URL, api_key, data, response, jsonResponse, responseArray, filteredResponse;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\n          api_key = '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';\n          data = JSON.stringify({\n            prompt: prompt,\n            temperature: 0.5,\n            max_tokens: 500,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n          });\n          _context.prev = 3;\n          _context.next = 6;\n          return fetch(API_URL, {\n            method: \"POST\",\n            body: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \".concat(api_key)\n            }\n          });\n        case 6:\n          response = _context.sent;\n          if (!response.ok) {\n            _context.next = 14;\n            break;\n          }\n          _context.next = 10;\n          return response.json();\n        case 10:\n          jsonResponse = _context.sent;\n          responseArray = jsonResponse.choices[0].text.split(/\\d+\\.\\s/g);\n          filteredResponse = responseArray.map(function (element) {\n            return element.replace(/\\n|\\d+\\./g, \"\").trim();\n          }).filter(function (element) {\n            return element !== \"\";\n          });\n          return _context.abrupt(\"return\", filteredResponse);\n        case 14:\n          _context.next = 19;\n          break;\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](3);\n          console.log(_context.t0);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3, 16]]);\n  }));\n  return function generateText(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\ngenerateText(\"Give me 20 song recommendations for this prompt: driving down the 101 with the top down. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`\").then(function (response) {\n  console.log(response);\n}).catch(function (error) {\n  console.error(error);\n});\nexport default {\n  generateText: generateText\n};","map":{"version":3,"names":["generateText","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","prompt","API_URL","api_key","data","response","jsonResponse","responseArray","filteredResponse","wrap","_callee$","_context","prev","next","JSON","stringify","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","fetch","method","body","headers","concat","sent","ok","json","choices","text","split","map","element","replace","trim","filter","abrupt","t0","console","log","stop","_x","apply","arguments","then","catch","error"],"sources":["C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/src/util/OpenAiAPIRequest.js"],"sourcesContent":["// Information to reach API\r\n\r\n//Asynchronous functions\r\nexport const generateText = async(prompt) => {\r\n    const API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\r\n    const api_key = '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';\r\n\r\n    const data = JSON.stringify({\r\n      prompt: prompt,\r\n      temperature: 0.5,\r\n      max_tokens: 500,\r\n      top_p: 1,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    });\r\n\r\n    try {\r\n        const response = await fetch(API_URL, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${api_key}`\r\n            }\r\n            });\r\n            if(response.ok){\r\n            const jsonResponse = await response.json();\r\n            const responseArray = jsonResponse.choices[0].text.split(/\\d+\\.\\s/g);\r\n            const filteredResponse = responseArray.map((element) => {\r\n                return element.replace(/\\n|\\d+\\./g, \"\").trim();\r\n            }).filter((element) => element !== \"\");\r\n            return(filteredResponse);\r\n        }\r\n    } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\ngenerateText(\"Give me 20 song recommendations for this prompt: driving down the 101 with the top down. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`\").then((response) => {\r\n    console.log(response);\r\n}).catch((error) => {\r\n    console.error(error);\r\n});\r\n\r\n\r\nexport default {generateText};\r\n"],"mappings":";;AAAA;;AAEA;AACA,OAAO,IAAMA,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAMC,MAAM;IAAA,IAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,gBAAA;IAAA,OAAAV,mBAAA,GAAAW,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAC9BX,OAAO,GAAG,gEAAgE;UAC1EC,OAAO,GAAG,qDAAqD;UAE/DC,IAAI,GAAGU,IAAI,CAACC,SAAS,CAAC;YAC1Bd,MAAM,EAAEA,MAAM;YACde,WAAW,EAAE,GAAG;YAChBC,UAAU,EAAE,GAAG;YACfC,KAAK,EAAE,CAAC;YACRC,iBAAiB,EAAE,CAAC;YACpBC,gBAAgB,EAAE;UACpB,CAAC,CAAC;UAAAT,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAGyBQ,KAAK,CAACnB,OAAO,EAAE;YAClCoB,MAAM,EAAE,MAAM;YACdC,IAAI,EAAEnB,IAAI;YACVoB,OAAO,EAAE;cACL,cAAc,EAAE,kBAAkB;cAClC,eAAe,YAAAC,MAAA,CAAYtB,OAAO;YACtC;UACA,CAAC,CAAC;QAAA;UAPAE,QAAQ,GAAAM,QAAA,CAAAe,IAAA;UAAA,KAQPrB,QAAQ,CAACsB,EAAE;YAAAhB,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACaR,QAAQ,CAACuB,IAAI,EAAE;QAAA;UAApCtB,YAAY,GAAAK,QAAA,CAAAe,IAAA;UACZnB,aAAa,GAAGD,YAAY,CAACuB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC;UAC9DvB,gBAAgB,GAAGD,aAAa,CAACyB,GAAG,CAAC,UAACC,OAAO,EAAK;YACpD,OAAOA,OAAO,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAACC,IAAI,EAAE;UAClD,CAAC,CAAC,CAACC,MAAM,CAAC,UAACH,OAAO;YAAA,OAAKA,OAAO,KAAK,EAAE;UAAA,EAAC;UAAA,OAAAtB,QAAA,CAAA0B,MAAA,WAC/B7B,gBAAgB;QAAA;UAAAG,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAA2B,EAAA,GAAA3B,QAAA;UAGvB4B,OAAO,CAACC,GAAG,CAAA7B,QAAA,CAAA2B,EAAA,CAAO;QAAC;QAAA;UAAA,OAAA3B,QAAA,CAAA8B,IAAA;MAAA;IAAA,GAAAzC,OAAA;EAAA,CAE1B;EAAA,gBAjCQL,YAAYA,CAAA+C,EAAA;IAAA,OAAA9C,IAAA,CAAA+C,KAAA,OAAAC,SAAA;EAAA;AAAA,GAiCpB;AAGLjD,YAAY,CAAC,uLAAuL,CAAC,CAACkD,IAAI,CAAC,UAACxC,QAAQ,EAAK;EACrNkC,OAAO,CAACC,GAAG,CAACnC,QAAQ,CAAC;AACzB,CAAC,CAAC,CAACyC,KAAK,CAAC,UAACC,KAAK,EAAK;EAChBR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;AACxB,CAAC,CAAC;AAGF,eAAe;EAACpD,YAAY,EAAZA;AAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}