{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar clientId = 'c3a859af5f674d61b9aaefe638761f1e'; // client ID  that Joe got from registering the app\nvar redirectUri = 'http://localhost:3000/callback'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nvar accessToken;\nvar Spotify = {\n  getAccessToken: function getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n    var accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    var expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      var expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(function () {\n        return accessToken = '';\n      }, expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/'); // This clears the parameters, allowing us to grab a new access token when it expires.\n      return accessToken;\n    } else {\n      var accessUrl = \"https://accounts.spotify.com/authorize?client_id=\".concat(clientId, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectUri);\n      window.location = accessUrl;\n    }\n  },\n  search: function search(term) {\n    var accessToken = Spotify.getAccessToken();\n    return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(function (track) {\n        return {\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        };\n      });\n    });\n  },\n  openAisearch: function openAisearch(term) {\n    var accessToken = Spotify.getAccessToken();\n    return fetch(\"https://api.spotify.com/v1/search?type=track&limit=1&q=\".concat(term), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(function (track) {\n        return {\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        };\n      });\n    });\n  },\n  makeRecommendation: function makeRecommendation(genre) {\n    var accessToken = Spotify.getAccessToken();\n    return fetch(\"https://api.spotify.com/v1/recommendations?limit=100&market=us&seed_genres=\".concat(genre, \"&min_danceability=50\\\"\"),\n    //will fill in with danceability values later\n    {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(function (track) {\n        return {\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        };\n      });\n    });\n  },\n  savePlaylist: function savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n    var accessToken = Spotify.getAccessToken();\n    var headers = {\n      Authorization: \"Bearer \".concat(accessToken)\n    };\n    var userId;\n    return fetch('https://api.spotify.com/v1/me', {\n      headers: headers\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      userId = jsonResponse.id;\n      return fetch(\"https://api.spotify.com/v1/users/\".concat(userId, \"/playlists\"), {\n        headers: headers,\n        method: 'POST',\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (jsonResponse) {\n        var playlistId = jsonResponse.id;\n        return fetch(\"https://api.spotify.com/v1/users/\".concat(userId, \"/playlists/\").concat(playlistId, \"/tracks\"), {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({\n            uris: trackUris\n          })\n        });\n      });\n    });\n  }\n};\nexport var generateText = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(prompt) {\n    var API_URL, api_key, data, response, jsonResponse, responseArray, filteredResponse;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\n          api_key = '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';\n          data = JSON.stringify({\n            prompt: prompt,\n            temperature: 0.5,\n            max_tokens: 500,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n          });\n          _context.prev = 3;\n          _context.next = 6;\n          return fetch(API_URL, {\n            method: \"POST\",\n            body: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": \"Bearer \".concat(api_key)\n            }\n          });\n        case 6:\n          response = _context.sent;\n          if (!response.ok) {\n            _context.next = 14;\n            break;\n          }\n          _context.next = 10;\n          return response.json();\n        case 10:\n          jsonResponse = _context.sent;\n          responseArray = jsonResponse.choices[0].text.split(/\\d+\\.\\s/g);\n          filteredResponse = responseArray.map(function (element) {\n            return element.replace(/\\n|\\d+\\./g, \"\").trim();\n          }).filter(function (element) {\n            return element !== \"\";\n          });\n          return _context.abrupt(\"return\", filteredResponse);\n        case 14:\n          _context.next = 19;\n          break;\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](3);\n          console.log(_context.t0);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3, 16]]);\n  }));\n  return function generateText(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\ngenerateText(\"Give me 20 song recommendations for this prompt: driving down the 101 with the top down. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`\").then(function (response) {\n  console.log(response);\n}).catch(function (error) {\n  console.error(error);\n});\nexport default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","concat","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","openAisearch","makeRecommendation","genre","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","generateText","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","prompt","API_URL","api_key","data","responseArray","filteredResponse","wrap","_callee$","_context","prev","next","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","sent","ok","choices","text","split","element","replace","trim","filter","abrupt","t0","console","log","stop","_x","apply","arguments","catch","error"],"sources":["C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/src/util/Spotify.js"],"sourcesContent":["const clientId = 'c3a859af5f674d61b9aaefe638761f1e'; // client ID  that Joe got from registering the app\nconst redirectUri = 'http://localhost:3000/callback'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nlet accessToken;\n\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/'); // This clears the parameters, allowing us to grab a new access token when it expires.\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  openAisearch(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&limit=1&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  makeRecommendation(genre) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/recommendations?limit=100&market=us&seed_genres=${genre}&min_danceability=50\"`,//will fill in with danceability values later\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n\n    const accessToken = Spotify.getAccessToken();\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    let userId;\n\n    return fetch('https://api.spotify.com/v1/me', {headers: headers}\n    ).then(response => response.json()\n    ).then(jsonResponse => {\n      userId = jsonResponse.id;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: headers,\n        method: 'POST',\n        body: JSON.stringify({name: name})\n      }).then(response => response.json()\n      ).then(jsonResponse => {\n        const playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({uris: trackUris})\n        });\n      });\n    });\n  }\n};\n\nexport const generateText = async(prompt) => {\n  const API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\n  const api_key = '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';\n\n  const data = JSON.stringify({\n    prompt: prompt,\n    temperature: 0.5,\n    max_tokens: 500,\n    top_p: 1,\n    frequency_penalty: 0,\n    presence_penalty: 0\n  });\n\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${api_key}`\n      }\n    });\n    if(response.ok){\n      const jsonResponse = await response.json();\n      const responseArray = jsonResponse.choices[0].text.split(/\\d+\\.\\s/g);\n      const filteredResponse = responseArray.map((element) => {\n        return element.replace(/\\n|\\d+\\./g, \"\").trim();\n      }).filter((element) => element !== \"\");\n      return(filteredResponse);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\ngenerateText(\"Give me 20 song recommendations for this prompt: driving down the 101 with the top down. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`\").then((response) => {\n  console.log(response);\n}).catch((error) => {\n  console.error(error);\n});\nexport default Spotify;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}