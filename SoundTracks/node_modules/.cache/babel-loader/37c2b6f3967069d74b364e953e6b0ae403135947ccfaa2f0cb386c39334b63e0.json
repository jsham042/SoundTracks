{"ast":null,"code":"import _toConsumableArray from\"C:/Users/joesh/OneDrive/Desktop/SoundTracks/SoundTracks/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"C:/Users/joesh/OneDrive/Desktop/SoundTracks/SoundTracks/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/joesh/OneDrive/Desktop/SoundTracks/SoundTracks/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/joesh/OneDrive/Desktop/SoundTracks/SoundTracks/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/joesh/OneDrive/Desktop/SoundTracks/SoundTracks/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/joesh/OneDrive/Desktop/SoundTracks/SoundTracks/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import'./App.css';import Playlist from'../Playlist/Playlist.js';import SearchBar from'../SearchBar/SearchBar.js';import SearchResults from'../SearchResults/SearchResults.js';import Spotify from'../../util/Spotify.js';import{generatePlaylistName as _generatePlaylistName,generateSongRecommendations}from\"../../util/OpenAiAPIRequest.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={searchResults:[],playlistName:'New Playlist',playlistTracks:[]};_this.search=_this.search.bind(_assertThisInitialized(_this));_this.openAiSearch=_this.openAiSearch.bind(_assertThisInitialized(_this));_this.addTrack=_this.addTrack.bind(_assertThisInitialized(_this));_this.removeTrack=_this.removeTrack.bind(_assertThisInitialized(_this));_this.updatePlaylistName=_this.updatePlaylistName.bind(_assertThisInitialized(_this));_this.savePlaylist=_this.savePlaylist.bind(_assertThisInitialized(_this));_this.generatePlaylistName=_this.generatePlaylistName.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"search\",value:function search(term){var _this2=this;Spotify.search(term).then(function(searchResults){_this2.setState({searchResults:searchResults});});}},{key:\"openAiSearch\",value:function openAiSearch(prompt){var _this3=this;generateSongRecommendations(\"Give me 20 song recommendations for this prompt: \".concat(prompt,\". Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name\")).then(function(response){console.log();var songList=response.slice(0,20);// Get the first 20 song recommendations\nvar promises=songList.map(function(song){return Spotify.openAiSearch(song);});// Create an array of promises for each song search\nPromise.all(promises)// Wait for all promises to resolve\n.then(function(searchResultsArray){var _ref;var searchResults=(_ref=[]).concat.apply(_ref,_toConsumableArray(searchResultsArray));// Concatenate all search results into a single array\n_this3.setState({searchResults:searchResults});}).catch(function(error){console.error(error);});}).catch(function(error){console.error(error);});}},{key:\"generatePlaylistName\",value:function generatePlaylistName(prompt){var _this4=this;_generatePlaylistName(\"Come up with a playlist name for playlist with the following vibe: \".concat(prompt,\" make it less than 50 characters\")).then(function(playListName){_this4.setState({playListName:playListName});});}},{key:\"addTrack\",value:function addTrack(track){var tracks=this.state.playlistTracks;if(tracks.find(function(savedTrack){return savedTrack.id===track.id;})){return;}tracks.push(track);this.setState({playlistTracks:tracks});}},{key:\"removeTrack\",value:function removeTrack(track){var tracks=this.state.playlistTracks;tracks=tracks.filter(function(currentTrack){return currentTrack.id!==track.id;});this.setState({playlistTracks:tracks});}},{key:\"updatePlaylistName\",value:function updatePlaylistName(name){this.setState({playlistName:name});}},{key:\"savePlaylist\",value:function savePlaylist(){var _this5=this;var trackUris=this.state.playlistTracks.map(function(track){return track.uri;});Spotify.savePlaylist(this.state.playlistName,trackUris).then(function(){_this5.setState({playlistName:'[NAME PLAYLIST]',playlistTracks:[]});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"SOUND\",/*#__PURE__*/_jsx(\"span\",{className:\"highlight\",children:\"TRACKS\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:this.openAiSearch}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-playlist\",children:[/*#__PURE__*/_jsx(SearchResults,{searchResults:this.state.searchResults,onAdd:this.addTrack}),/*#__PURE__*/_jsx(Playlist,{playlistName:this.state.playlistName,playlistTracks:this.state.playlistTracks,onNameChange:this.updatePlaylistName,onRemove:this.removeTrack,onSave:this.savePlaylist})]})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"names":["React","Playlist","SearchBar","SearchResults","Spotify","generatePlaylistName","generateSongRecommendations","jsx","_jsx","jsxs","_jsxs","App","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","searchResults","playlistName","playlistTracks","search","bind","_assertThisInitialized","openAiSearch","addTrack","removeTrack","updatePlaylistName","savePlaylist","_createClass","key","value","term","_this2","then","setState","prompt","_this3","concat","response","console","log","songList","slice","promises","map","song","Promise","all","searchResultsArray","_ref","apply","_toConsumableArray","catch","error","_this4","playListName","track","tracks","find","savedTrack","id","push","filter","currentTrack","name","_this5","trackUris","uri","render","children","className","onSearch","onAdd","onNameChange","onRemove","onSave","Component"],"sources":["C:/Users/joesh/OneDrive/Desktop/SoundTracks/SoundTracks/src/components/App/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Playlist from '../Playlist/Playlist.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport Spotify from '../../util/Spotify.js';\nimport {generatePlaylistName, generateSongRecommendations} from \"../../util/OpenAiAPIRequest.js\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: [],\n    };\n\n    this.search = this.search.bind(this);\n    this.openAiSearch = this.openAiSearch.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.generatePlaylistName = this.generatePlaylistName.bind(this);\n\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults});\n    });\n  }\n\n\n  openAiSearch(prompt){\n    generateSongRecommendations(`Give me 20 song recommendations for this prompt: ${prompt}. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`)\n        .then((response) => {\n          console.log()\n          const songList = response.slice(0, 20); // Get the first 20 song recommendations\n          const promises = songList.map(song => Spotify.openAiSearch(song)); // Create an array of promises for each song search\n          Promise.all(promises) // Wait for all promises to resolve\n              .then((searchResultsArray) => {\n                const searchResults = [].concat(...searchResultsArray); // Concatenate all search results into a single array\n                this.setState({searchResults: searchResults});\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n  }\n\n  generatePlaylistName(prompt) {\n    generatePlaylistName(`Come up with a playlist name for playlist with the following vibe: ${prompt} make it less than 50 characters`).then(playListName => {\n      this.setState({playListName: playListName});\n    });\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({playlistTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: '[NAME PLAYLIST]',\n        playlistTracks: []\n      });\n    });\n  }\n\n  render() {\n    return (\n        <div>\n          <h1>SOUND<span className=\"highlight\">TRACKS</span></h1>\n          <div className=\"App\">\n            <SearchBar onSearch={this.openAiSearch} />\n            <div className=\"App-playlist\">\n              <SearchResults searchResults={this.state.searchResults}\n                             onAdd={this.addTrack} />\n              <Playlist playlistName={this.state.playlistName}\n                        playlistTracks={this.state.playlistTracks}\n                        onNameChange={this.updatePlaylistName}\n                        onRemove={this.removeTrack}\n                        onSave={this.savePlaylist} />\n            </div>\n          </div>\n        </div>\n    );\n  }\n\n}\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}