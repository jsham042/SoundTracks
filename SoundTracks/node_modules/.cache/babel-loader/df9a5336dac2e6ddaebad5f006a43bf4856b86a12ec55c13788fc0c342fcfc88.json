{"ast":null,"code":"import Spotify from \"./Spotify.js\";\nvar API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\nvar api_key = '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';\nvar OpenAI = {\n  generateText: function generateText(prompt) {\n    var data = JSON.stringify({\n      prompt: prompt,\n      temperature: 0.5,\n      max_tokens: 500,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    });\n    return fetch(API_URL, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        Authorization: \"Bearer \".concat(api_key)\n      }\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n};\nexport default OpenAI;\nOpenAI.generateText(\"Give me 20 song recommendations for this prompt: driving down the 101 with the top down. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`\").then(function (response) {\n  console.log(response);\n}).catch(function (error) {\n  console.error(error);\n});","map":{"version":3,"names":["Spotify","API_URL","api_key","OpenAI","generateText","prompt","data","JSON","stringify","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","fetch","method","body","headers","Authorization","concat","then","response","json","console","log","catch","error"],"sources":["C:/Users/joesh/OneDrive/Desktop/jammming-project-solution/jammming-project-solution/src/util/OpenAI.js"],"sourcesContent":["import Spotify from \"./Spotify.js\";\r\n\r\nconst API_URL = \"https://api.openai.com/v1/engines/text-davinci-003/completions\";\r\nconst api_key = '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';\r\n\r\nconst OpenAI = {\r\n\r\n    generateText(prompt) {\r\n        const data = JSON.stringify({\r\n            prompt: prompt,\r\n            temperature: 0.5,\r\n            max_tokens: 500,\r\n            top_p: 1,\r\n            frequency_penalty: 0,\r\n            presence_penalty: 0\r\n        });\r\n        return fetch(API_URL, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                Authorization: `Bearer ${api_key}`\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n    }\r\n}\r\nexport default OpenAI;\r\n\r\nOpenAI.generateText(\"Give me 20 song recommendations for this prompt: driving down the 101 with the top down. Format the response with this convention Song Name - Artist Name 2. Song Name - Artist Name`\").then((response) => {\r\n    console.log(response);\r\n}).catch((error) => {\r\n    console.error(error);\r\n});"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAElC,IAAMC,OAAO,GAAG,gEAAgE;AAChF,IAAMC,OAAO,GAAG,qDAAqD;AAErE,IAAMC,MAAM,GAAG;EAEXC,YAAY,WAAAA,aAACC,MAAM,EAAE;IACjB,IAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MACxBH,MAAM,EAAEA,MAAM;MACdI,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,GAAG;MACfC,KAAK,EAAE,CAAC;MACRC,iBAAiB,EAAE,CAAC;MACpBC,gBAAgB,EAAE;IACtB,CAAC,CAAC;IACF,OAAOC,KAAK,CAACb,OAAO,EAAE;MAClBc,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEV,IAAI;MACVW,OAAO,EAAE;QACLC,aAAa,YAAAC,MAAA,CAAYjB,OAAO;MACpC;IACJ,CAAC,CAAC,CAACkB,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAC1B,CAAC,CAAC;EACN;AACJ,CAAC;AACD,eAAenB,MAAM;AAErBA,MAAM,CAACC,YAAY,CAAC,uLAAuL,CAAC,CAACgB,IAAI,CAAC,UAACC,QAAQ,EAAK;EAC5NE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;AACzB,CAAC,CAAC,CAACI,KAAK,CAAC,UAACC,KAAK,EAAK;EAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;AACxB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}